// Code generated by MockGen. DO NOT EDIT.
// Source: ./api/services/services.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	models "github.com/chandan782/Pismo/api/models"
	response "github.com/chandan782/Pismo/response"
	gomock "github.com/golang/mock/gomock"
)

// MockServices is a mock of Services interface.
type MockServices struct {
	ctrl     *gomock.Controller
	recorder *MockServicesMockRecorder
}

// MockServicesMockRecorder is the mock recorder for MockServices.
type MockServicesMockRecorder struct {
	mock *MockServices
}

// NewMockServices creates a new mock instance.
func NewMockServices(ctrl *gomock.Controller) *MockServices {
	mock := &MockServices{ctrl: ctrl}
	mock.recorder = &MockServicesMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockServices) EXPECT() *MockServicesMockRecorder {
	return m.recorder
}

// CreateAccount mocks base method.
func (m *MockServices) CreateAccount(arg0 context.Context, arg1 models.CreateAccountRequest) *response.BodyStruct {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateAccount", arg0, arg1)
	ret0, _ := ret[0].(*response.BodyStruct)
	return ret0
}

// CreateAccount indicates an expected call of CreateAccount.
func (mr *MockServicesMockRecorder) CreateAccount(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateAccount", reflect.TypeOf((*MockServices)(nil).CreateAccount), arg0, arg1)
}

// CreateTransaction mocks base method.
func (m *MockServices) CreateTransaction(arg0 context.Context, arg1 models.CreateTransactionRequest) *response.BodyStruct {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateTransaction", arg0, arg1)
	ret0, _ := ret[0].(*response.BodyStruct)
	return ret0
}

// CreateTransaction indicates an expected call of CreateTransaction.
func (mr *MockServicesMockRecorder) CreateTransaction(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateTransaction", reflect.TypeOf((*MockServices)(nil).CreateTransaction), arg0, arg1)
}

// GetAccountById mocks base method.
func (m *MockServices) GetAccountById(arg0 context.Context, arg1 string) *response.BodyStruct {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAccountById", arg0, arg1)
	ret0, _ := ret[0].(*response.BodyStruct)
	return ret0
}

// GetAccountById indicates an expected call of GetAccountById.
func (mr *MockServicesMockRecorder) GetAccountById(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAccountById", reflect.TypeOf((*MockServices)(nil).GetAccountById), arg0, arg1)
}
